{"ast":null,"code":"import { useReducer } from \"react\";\nimport { UPDATE_PRODUCTS, UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY, ADD_TO_CART, ADD_MULTIPLE_TO_CART, REMOVE_FROM_CART, UPDATE_CART_QUANTITY, CLEAR_CART, TOGGLE_CART } from \"./actions\";\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    // if action type value is the value of `UPDATE_PRODUCTS`, return a new state object with an updated products array\n    case UPDATE_PRODUCTS:\n      return { ...state,\n        products: [...action.products]\n      };\n    // if action type value is the value of `UPDATE_CATEGORIES`, return a new state object with an updated categories array\n\n    case UPDATE_CATEGORIES:\n      return { ...state,\n        categories: [...action.categories]\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return { ...state,\n        currentCategory: action.currentCategory\n      };\n\n    case ADD_TO_CART:\n      return { ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.product]\n      };\n\n    case ADD_MULTIPLE_TO_CART:\n      return { ...state,\n        cart: [...state.cart, ...action.products]\n      };\n\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter(product => {\n        return product._id !== action._id;\n      });\n      return { ...state,\n        cartOpen: newState.length > 0,\n        cart: newState\n      };\n\n    case UPDATE_CART_QUANTITY:\n      return { ...state,\n        cartOpen: true,\n        cart: state.cart.map(product => {\n          if (action._id === product._id) {\n            product.purchaseQuantity = action.purchaseQuantity;\n          }\n\n          return product;\n        })\n      };\n\n    case CLEAR_CART:\n      return { ...state,\n        cartOpen: false,\n        cart: []\n      };\n\n    case TOGGLE_CART:\n      return { ...state,\n        cartOpen: !state.cartOpen\n      };\n\n    default:\n      return state;\n  }\n};\nexport function useProductReducer(initialState) {\n  return useReducer(reducer, initialState);\n}","map":{"version":3,"names":["useReducer","UPDATE_PRODUCTS","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","ADD_TO_CART","ADD_MULTIPLE_TO_CART","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","CLEAR_CART","TOGGLE_CART","reducer","state","action","type","products","categories","currentCategory","cartOpen","cart","product","newState","filter","_id","length","map","purchaseQuantity","useProductReducer","initialState"],"sources":["C:/Users/sammc/Code/projects/shop-shop/client/src/utils/reducers.js"],"sourcesContent":["import { useReducer } from \"react\";\r\n\r\nimport {\r\n  UPDATE_PRODUCTS,\r\n  UPDATE_CATEGORIES,\r\n  UPDATE_CURRENT_CATEGORY,\r\n  ADD_TO_CART,\r\n  ADD_MULTIPLE_TO_CART,\r\n  REMOVE_FROM_CART,\r\n  UPDATE_CART_QUANTITY,\r\n  CLEAR_CART,\r\n  TOGGLE_CART,\r\n} from \"./actions\";\r\n\r\nexport const reducer = (state, action) => {\r\n  switch (action.type) {\r\n    // if action type value is the value of `UPDATE_PRODUCTS`, return a new state object with an updated products array\r\n    case UPDATE_PRODUCTS:\r\n      return {\r\n        ...state,\r\n        products: [...action.products],\r\n      };\r\n    // if action type value is the value of `UPDATE_CATEGORIES`, return a new state object with an updated categories array\r\n    case UPDATE_CATEGORIES:\r\n      return {\r\n        ...state,\r\n        categories: [...action.categories],\r\n      };\r\n    case UPDATE_CURRENT_CATEGORY:\r\n      return {\r\n        ...state,\r\n        currentCategory: action.currentCategory,\r\n      };\r\n    case ADD_TO_CART:\r\n      return {\r\n        ...state,\r\n        cartOpen: true,\r\n        cart: [...state.cart, action.product],\r\n      };\r\n    case ADD_MULTIPLE_TO_CART:\r\n      return {\r\n        ...state,\r\n        cart: [...state.cart, ...action.products],\r\n      };\r\n    case REMOVE_FROM_CART:\r\n      let newState = state.cart.filter((product) => {\r\n        return product._id !== action._id;\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        cartOpen: newState.length > 0,\r\n        cart: newState,\r\n      };\r\n    case UPDATE_CART_QUANTITY:\r\n      return {\r\n        ...state,\r\n        cartOpen: true,\r\n        cart: state.cart.map((product) => {\r\n          if (action._id === product._id) {\r\n            product.purchaseQuantity = action.purchaseQuantity;\r\n          }\r\n          return product;\r\n        }),\r\n      };\r\n    case CLEAR_CART:\r\n      return {\r\n        ...state,\r\n        cartOpen: false,\r\n        cart: [],\r\n      };\r\n\r\n    case TOGGLE_CART:\r\n      return {\r\n        ...state,\r\n        cartOpen: !state.cartOpen,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport function useProductReducer(initialState) {\r\n  return useReducer(reducer, initialState);\r\n}\r\n"],"mappings":"AAAA,SAASA,UAAT,QAA2B,OAA3B;AAEA,SACEC,eADF,EAEEC,iBAFF,EAGEC,uBAHF,EAIEC,WAJF,EAKEC,oBALF,EAMEC,gBANF,EAOEC,oBAPF,EAQEC,UARF,EASEC,WATF,QAUO,WAVP;AAYA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACxC,QAAQA,MAAM,CAACC,IAAf;IACE;IACA,KAAKZ,eAAL;MACE,OAAO,EACL,GAAGU,KADE;QAELG,QAAQ,EAAE,CAAC,GAAGF,MAAM,CAACE,QAAX;MAFL,CAAP;IAIF;;IACA,KAAKZ,iBAAL;MACE,OAAO,EACL,GAAGS,KADE;QAELI,UAAU,EAAE,CAAC,GAAGH,MAAM,CAACG,UAAX;MAFP,CAAP;;IAIF,KAAKZ,uBAAL;MACE,OAAO,EACL,GAAGQ,KADE;QAELK,eAAe,EAAEJ,MAAM,CAACI;MAFnB,CAAP;;IAIF,KAAKZ,WAAL;MACE,OAAO,EACL,GAAGO,KADE;QAELM,QAAQ,EAAE,IAFL;QAGLC,IAAI,EAAE,CAAC,GAAGP,KAAK,CAACO,IAAV,EAAgBN,MAAM,CAACO,OAAvB;MAHD,CAAP;;IAKF,KAAKd,oBAAL;MACE,OAAO,EACL,GAAGM,KADE;QAELO,IAAI,EAAE,CAAC,GAAGP,KAAK,CAACO,IAAV,EAAgB,GAAGN,MAAM,CAACE,QAA1B;MAFD,CAAP;;IAIF,KAAKR,gBAAL;MACE,IAAIc,QAAQ,GAAGT,KAAK,CAACO,IAAN,CAAWG,MAAX,CAAmBF,OAAD,IAAa;QAC5C,OAAOA,OAAO,CAACG,GAAR,KAAgBV,MAAM,CAACU,GAA9B;MACD,CAFc,CAAf;MAIA,OAAO,EACL,GAAGX,KADE;QAELM,QAAQ,EAAEG,QAAQ,CAACG,MAAT,GAAkB,CAFvB;QAGLL,IAAI,EAAEE;MAHD,CAAP;;IAKF,KAAKb,oBAAL;MACE,OAAO,EACL,GAAGI,KADE;QAELM,QAAQ,EAAE,IAFL;QAGLC,IAAI,EAAEP,KAAK,CAACO,IAAN,CAAWM,GAAX,CAAgBL,OAAD,IAAa;UAChC,IAAIP,MAAM,CAACU,GAAP,KAAeH,OAAO,CAACG,GAA3B,EAAgC;YAC9BH,OAAO,CAACM,gBAAR,GAA2Bb,MAAM,CAACa,gBAAlC;UACD;;UACD,OAAON,OAAP;QACD,CALK;MAHD,CAAP;;IAUF,KAAKX,UAAL;MACE,OAAO,EACL,GAAGG,KADE;QAELM,QAAQ,EAAE,KAFL;QAGLC,IAAI,EAAE;MAHD,CAAP;;IAMF,KAAKT,WAAL;MACE,OAAO,EACL,GAAGE,KADE;QAELM,QAAQ,EAAE,CAACN,KAAK,CAACM;MAFZ,CAAP;;IAIF;MACE,OAAON,KAAP;EA/DJ;AAiED,CAlEM;AAoEP,OAAO,SAASe,iBAAT,CAA2BC,YAA3B,EAAyC;EAC9C,OAAO3B,UAAU,CAACU,OAAD,EAAUiB,YAAV,CAAjB;AACD"},"metadata":{},"sourceType":"module"}